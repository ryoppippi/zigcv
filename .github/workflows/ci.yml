name: ci

on: push

jobs:
  run_test_and_build_docs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: setup zig master
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: master
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build wget curl unzip
      - name: OpenCV Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ./opencv-build
          key: ${{ runner.os }}-opencv-build-
      - name: Cache zig
        id: opencv-cache
        uses: actions/cache@v2
        with:
          path: ./zig-cache
          key: ${{ runner.os }}-zig-cache
      - name: Download OpenCV
        run: |
          wget -O opencv.zip https://github.com/opencv/opencv/archive/4.6.0.zip
          wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.6.0.zip
          unzip opencv.zip
          unzip opencv_contrib.zip
      - name: build opencv
        run: |
          mkdir -p opencv-build
          cd opencv-build
          cmake \
            -D CMAKE_BUILD_TYPE=RELEASE \
            -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib-4.6.0/modules/ \
            -D OPENCV_ENABLE_NONFREE=ON \
            -D WITH_JASPER=OFF \
            -D WITH_TBB=ON \
            -D BUILD_DOCS=OFF \
            -D BUILD_EXAMPLES=OFF \
            -D BUILD_TESTS=OFF \
            -D BUILD_PERF_TESTS=OFF \
            -D BUILD_opencv_java=NO \
            -D BUILD_opencv_python=NO \
            -D BUILD_opencv_python2=NO \
            -D BUILD_opencv_python3=NO \
            -D OPENCV_GENERATE_PKGCONFIG=ON \
            ../opencv-4.6.0/ \
            -G Ninja
          ninja
          sudo ninja install
        env:
          CC: "zig cc"
          CXX: "zig c++"
      - name: test
        run: zig build test
      - name: build examples
        run: zig build examples
      - name: build docs
        if: github.ref == 'refs/heads/main'
        run: zig build docs
      - uses: actions/upload-pages-artifact@v1
        if: github.ref == 'refs/heads/main'
        with:
          path: docs
      - name: delete tmp files
        run: rm -rf ./zig-cache/tmp

  deploy:
    needs: run_test_and_build_docs
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
